"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrevityInterpreter__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "currentNonce",
                type: "uint256",
            },
        ],
        name: "InvalidAccountNonce",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signer",
                type: "address",
            },
        ],
        name: "nonces",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "config",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "opcode",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32[]",
                                name: "args",
                                type: "bytes32[]",
                            },
                        ],
                        internalType: "struct Instruction[]",
                        name: "instructions",
                        type: "tuple[]",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "quantityType",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32[]",
                                name: "args",
                                type: "bytes32[]",
                            },
                        ],
                        internalType: "struct Quantity[]",
                        name: "quantities",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct Program",
                name: "p",
                type: "tuple",
            },
        ],
        name: "noop",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "mem",
                type: "uint256[]",
            },
            {
                internalType: "uint256",
                name: "from",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "to",
                type: "uint256",
            },
        ],
        name: "printMem",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "config",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "opcode",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32[]",
                                name: "args",
                                type: "bytes32[]",
                            },
                        ],
                        internalType: "struct Instruction[]",
                        name: "instructions",
                        type: "tuple[]",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "quantityType",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32[]",
                                name: "args",
                                type: "bytes32[]",
                            },
                        ],
                        internalType: "struct Quantity[]",
                        name: "quantities",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct Program",
                name: "p",
                type: "tuple",
            },
        ],
        name: "run",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "config",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "opcode",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32[]",
                                name: "args",
                                type: "bytes32[]",
                            },
                        ],
                        internalType: "struct Instruction[]",
                        name: "instructions",
                        type: "tuple[]",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "quantityType",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32[]",
                                name: "args",
                                type: "bytes32[]",
                            },
                        ],
                        internalType: "struct Quantity[]",
                        name: "quantities",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct Program",
                name: "p",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "sig",
                type: "bytes",
            },
        ],
        name: "runMeta",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
class BrevityInterpreter__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.BrevityInterpreter__factory = BrevityInterpreter__factory;
BrevityInterpreter__factory.abi = _abi;
