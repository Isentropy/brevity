/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestToken,
  TestTokenInterface,
} from "../../../contracts/test/TestToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "mintTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051806040016040528060048152602001631d195cdd60e21b815250604051806040016040528060018152602001601560fa1b81525081600390816100579190610290565b5060046100648282610290565b505050610083336b204fce5e3e2502611000000061008860201b60201c565b610375565b6001600160a01b0382166100b75760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100c3600083836100c7565b5050565b6001600160a01b0383166100f25780600260008282546100e7919061034e565b909155506101649050565b6001600160a01b038316600090815260208190526040902054818110156101455760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100ae565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166101805760028054829003905561019f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101e491815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061021b57607f821691505b60208210810361023b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561028b57806000526020600020601f840160051c810160208510156102685750805b601f840160051c820191505b818110156102885760008155600101610274565b50505b505050565b81516001600160401b038111156102a9576102a96101f1565b6102bd816102b78454610207565b84610241565b6020601f8211600181146102f157600083156102d95750848201515b600019600385901b1c1916600184901b178455610288565b600084815260208120601f198516915b828110156103215787850151825560209485019460019092019101610301565b508482101561033f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561036f57634e487b7160e01b600052601160045260246000fd5b92915050565b61094c806103846000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634a5dc1b7116100665780634a5dc1b71461011857806370a082311461012d57806395d89b41146100a3578063a9059cbb14610156578063dd62ed3e1461016957600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101a2565b6040516100b891906105e6565b60405180910390f35b6100d46100cf366004610650565b610234565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d461010436600461067a565b61024e565b604051601281526020016100b8565b61012b6101263660046106b7565b610272565b005b6100e861013b366004610742565b6001600160a01b031660009081526020819052604090205490565b6100d4610164366004610650565b6102b1565b6100e8610177366004610764565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600580546101b190610797565b80601f01602080910402602001604051908101604052809291908181526020018280546101dd90610797565b801561022a5780601f106101ff5761010080835404028352916020019161022a565b820191906000526020600020905b81548152906001019060200180831161020d57829003601f168201915b5050505050905090565b6000336102428185856102bf565b60019150505b92915050565b60003361025c8582856102d1565b61026785858561034e565b506001949350505050565b60025415610293576040516310d6d3ed60e31b815260040160405180910390fd5b60056102a0848683610835565b506102ab82826103ad565b50505050565b60003361024281858561034e565b6102cc83838360016103e7565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146102ab578181101561033f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102ab848484840360006103e7565b6001600160a01b03831661037857604051634b637e8f60e11b815260006004820152602401610336565b6001600160a01b0382166103a25760405163ec442f0560e01b815260006004820152602401610336565b6102cc8383836104bc565b6001600160a01b0382166103d75760405163ec442f0560e01b815260006004820152602401610336565b6103e3600083836104bc565b5050565b6001600160a01b0384166104115760405163e602df0560e01b815260006004820152602401610336565b6001600160a01b03831661043b57604051634a1406b160e11b815260006004820152602401610336565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156102ab57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104ae91815260200190565b60405180910390a350505050565b6001600160a01b0383166104e75780600260008282546104dc91906108f5565b909155506105599050565b6001600160a01b0383166000908152602081905260409020548181101561053a5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610336565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661057557600280548290039055610594565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105d991815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561061457602081860181015160408684010152016105f7565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461064b57600080fd5b919050565b6000806040838503121561066357600080fd5b61066c83610634565b946020939093013593505050565b60008060006060848603121561068f57600080fd5b61069884610634565b92506106a660208501610634565b929592945050506040919091013590565b600080600080606085870312156106cd57600080fd5b843567ffffffffffffffff8111156106e457600080fd5b8501601f810187136106f557600080fd5b803567ffffffffffffffff81111561070c57600080fd5b87602082840101111561071e57600080fd5b602091820195509350610732908601610634565b9396929550929360400135925050565b60006020828403121561075457600080fd5b61075d82610634565b9392505050565b6000806040838503121561077757600080fd5b61078083610634565b915061078e60208401610634565b90509250929050565b600181811c908216806107ab57607f821691505b6020821081036107cb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f8211156102cc57806000526020600020601f840160051c8101602085101561080e5750805b601f840160051c820191505b8181101561082e576000815560010161081a565b5050505050565b67ffffffffffffffff83111561084d5761084d6107d1565b6108618361085b8354610797565b836107e7565b6000601f841160018114610895576000851561087d5750838201355b600019600387901b1c1916600186901b17835561082e565b600083815260209020601f19861690835b828110156108c657868501358255602094850194600190920191016108a6565b50868210156108e35760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8082018082111561024857634e487b7160e01b600052601160045260246000fdfea2646970667358221220ddd291b70b55595d6e3fb088d98dcae7a51ba3f86d81a53e2acab98bc0a7781564736f6c634300081b0033";

type TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken__factory extends ContractFactory {
  constructor(...args: TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestToken__factory {
    return super.connect(runner) as TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new Interface(_abi) as TestTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestToken {
    return new Contract(address, _abi, runner) as unknown as TestToken;
  }
}
