"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestTokenMultiMint__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "AlreadInitialized",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "allowance",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "needed",
                type: "uint256",
            },
        ],
        name: "ERC20InsufficientAllowance",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "needed",
                type: "uint256",
            },
        ],
        name: "ERC20InsufficientBalance",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "approver",
                type: "address",
            },
        ],
        name: "ERC20InvalidApprover",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
        ],
        name: "ERC20InvalidReceiver",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
        ],
        name: "ERC20InvalidSender",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "ERC20InvalidSpender",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "symbol_",
                type: "string",
            },
            {
                internalType: "address",
                name: "mintTo",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "mintAmount",
                type: "uint256",
            },
        ],
        name: "init",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50604051806040016040528060048152602001631d195cdd60e21b815250604051806040016040528060018152602001601560fa1b81525081600390816100579190610290565b5060046100648282610290565b505050610083336b204fce5e3e2502611000000061008860201b60201c565b610375565b6001600160a01b0382166100b75760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100c3600083836100c7565b5050565b6001600160a01b0383166100f25780600260008282546100e7919061034e565b909155506101649050565b6001600160a01b038316600090815260208190526040902054818110156101455760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100ae565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166101805760028054829003905561019f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101e491815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061021b57607f821691505b60208210810361023b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561028b57806000526020600020601f840160051c810160208510156102685750805b601f840160051c820191505b818110156102885760008155600101610274565b50505b505050565b81516001600160401b038111156102a9576102a96101f1565b6102bd816102b78454610207565b84610241565b6020601f8211600181146102f157600083156102d95750848201515b600019600385901b1c1916600184901b178455610288565b600084815260208120601f198516915b828110156103215787850151825560209485019460019092019101610301565b508482101561033f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561036f57634e487b7160e01b600052601160045260246000fd5b92915050565b610974806103846000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f19146101235780634a5dc1b71461013857806370a082311461014b57806395d89b41146100ae578063a9059cbb14610174578063dd62ed3e1461018757600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c0565b6040516100c3919061060e565b60405180910390f35b6100df6100da366004610678565b610252565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106a2565b61026c565b604051601281526020016100c3565b610136610131366004610678565b610290565b005b6101366101463660046106df565b61029e565b6100f361015936600461076a565b6001600160a01b031660009081526020819052604090205490565b6100df610182366004610678565b6102dd565b6100f361019536600461078c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600580546101cf906107bf565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906107bf565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b6000336102608185856102eb565b60019150505b92915050565b60003361027a8582856102fd565b61028585858561037a565b506001949350505050565b61029a82826103d9565b5050565b600254156102bf576040516310d6d3ed60e31b815260040160405180910390fd5b60056102cc84868361085d565b506102d782826103d9565b50505050565b60003361026081858561037a565b6102f8838383600161040f565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146102d7578181101561036b57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102d78484848403600061040f565b6001600160a01b0383166103a457604051634b637e8f60e11b815260006004820152602401610362565b6001600160a01b0382166103ce5760405163ec442f0560e01b815260006004820152602401610362565b6102f88383836104e4565b6001600160a01b0382166104035760405163ec442f0560e01b815260006004820152602401610362565b61029a600083836104e4565b6001600160a01b0384166104395760405163e602df0560e01b815260006004820152602401610362565b6001600160a01b03831661046357604051634a1406b160e11b815260006004820152602401610362565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156102d757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104d691815260200190565b60405180910390a350505050565b6001600160a01b03831661050f578060026000828254610504919061091d565b909155506105819050565b6001600160a01b038316600090815260208190526040902054818110156105625760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610362565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661059d576002805482900390556105bc565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161060191815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561063c576020818601810151604086840101520161061f565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461067357600080fd5b919050565b6000806040838503121561068b57600080fd5b6106948361065c565b946020939093013593505050565b6000806000606084860312156106b757600080fd5b6106c08461065c565b92506106ce6020850161065c565b929592945050506040919091013590565b600080600080606085870312156106f557600080fd5b843567ffffffffffffffff81111561070c57600080fd5b8501601f8101871361071d57600080fd5b803567ffffffffffffffff81111561073457600080fd5b87602082840101111561074657600080fd5b60209182019550935061075a90860161065c565b9396929550929360400135925050565b60006020828403121561077c57600080fd5b6107858261065c565b9392505050565b6000806040838503121561079f57600080fd5b6107a88361065c565b91506107b66020840161065c565b90509250929050565b600181811c908216806107d357607f821691505b6020821081036107f357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f8211156102f857806000526020600020601f840160051c810160208510156108365750805b601f840160051c820191505b818110156108565760008155600101610842565b5050505050565b67ffffffffffffffff831115610875576108756107f9565b6108898361088383546107bf565b8361080f565b6000601f8411600181146108bd57600085156108a55750838201355b600019600387901b1c1916600186901b178355610856565b600083815260209020601f19861690835b828110156108ee57868501358255602094850194600190920191016108ce565b508682101561090b5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8082018082111561026657634e487b7160e01b600052601160045260246000fdfea2646970667358221220c7fde348131567e7ae57c71c9b561521e4f94f44719cbf04de50504fb30b28fc64736f6c634300081b0033";
const isSuperArgs = (xs) => xs.length > 1;
class TestTokenMultiMint__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.TestTokenMultiMint__factory = TestTokenMultiMint__factory;
TestTokenMultiMint__factory.bytecode = _bytecode;
TestTokenMultiMint__factory.abi = _abi;
