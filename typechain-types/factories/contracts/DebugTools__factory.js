"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugTools__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "logData",
                type: "string",
            },
        ],
        name: "consoleLog",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "logData",
                type: "bytes",
            },
        ],
        name: "log0",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "topic1",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "logData",
                type: "bytes",
            },
        ],
        name: "log1",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "topic1",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "topic2",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "logData",
                type: "bytes",
            },
        ],
        name: "log2",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "topic1",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "topic2",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "topic3",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "logData",
                type: "bytes",
            },
        ],
        name: "log3",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "topic1",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "topic2",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "topic3",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "topic4",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "logData",
                type: "bytes",
            },
        ],
        name: "log4",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6080604052348015600f57600080fd5b506104968061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100615760003560e01c80627f832d146100665780630aa781ed1461007b5780630f13f10b1461008e5780636494876f146100a15780637ca0845b146100b4578063bf2b135b146100c7575b600080fd5b610079610074366004610237565b6100da565b005b610079610089366004610287565b6100e5565b61007961009c3660046102ce565b6100ee565b6100796100af36600461031f565b6100fa565b6100796100c2366004610379565b610107565b6100796100d53660046103ae565b61010e565b8183825183a2505050565b81815182a15050565b6100f78161011d565b50565b818385835184a350505050565b805181a050565b81838587845185a45050505050565b6100f7816040516024016101319190610412565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526100f78160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff8411156101b1576101b1610180565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156101e0576101e0610180565b6040528381529050808284018510156101f857600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261022157600080fd5b61023083833560208501610196565b9392505050565b60008060006060848603121561024c57600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561027157600080fd5b61027d86828701610210565b9150509250925092565b6000806040838503121561029a57600080fd5b82359150602083013567ffffffffffffffff8111156102b857600080fd5b6102c485828601610210565b9150509250929050565b6000602082840312156102e057600080fd5b813567ffffffffffffffff8111156102f757600080fd5b8201601f8101841361030857600080fd5b61031784823560208401610196565b949350505050565b6000806000806080858703121561033557600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561036157600080fd5b61036d87828801610210565b91505092959194509250565b60006020828403121561038b57600080fd5b813567ffffffffffffffff8111156103a257600080fd5b61031784828501610210565b600080600080600060a086880312156103c657600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156103f957600080fd5b61040588828901610210565b9150509295509295909350565b602081526000825180602084015260005b818110156104405760208186018101516040868401015201610423565b506000604082850101526040601f19601f8301168401019150509291505056fea26469706673582212200df3a474bc8b184fb0344ad72d2f7efe21c337022753af39019a1d4522b6320a64736f6c634300081b0033";
const isSuperArgs = (xs) => xs.length > 1;
class DebugTools__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.DebugTools__factory = DebugTools__factory;
DebugTools__factory.bytecode = _bytecode;
DebugTools__factory.abi = _abi;
