/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OwnedBrevityInterpreter,
  OwnedBrevityInterpreterInterface,
} from "../../contracts/OwnedBrevityInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpDest",
        type: "uint256",
      },
    ],
    name: "BadJump",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "opcode",
        type: "uint256",
      },
    ],
    name: "NotPermitted",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerAlreadySet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
    ],
    name: "Reverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "found",
        type: "uint256",
      },
    ],
    name: "WrongBrevityVersion",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "logData",
        type: "string",
      },
    ],
    name: "consoleLog",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log0",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic2",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic3",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log3",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic4",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log4",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
    ],
    name: "noop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "mem",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "printMem",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
    ],
    name: "run",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "runMeta",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "withdrawAllMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b506040516128e13803806128e183398101604081905261003091610211565b6040805180820182526004815263213932bb60e11b602080830191909152825180840190935260018352603160f81b908301529061006f826000610123565b6101205261007e816001610123565b61014052815160208084019190912060e052815190820120610100524660a05261010b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261011d81610156565b50610410565b600060208351101561013f57610138836101ca565b9050610150565b8161014a84826102e0565b5060ff90505b92915050565b6003546001600160a01b0316156101805760405163cf04b1bb60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90600090a250565b600080829050601f815111156101fe578260405163305a27a960e01b81526004016101f5919061039e565b60405180910390fd5b8051610209826103ec565b179392505050565b60006020828403121561022357600080fd5b81516001600160a01b038116811461023a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061026b57607f821691505b60208210810361028b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102db57806000526020600020601f840160051c810160208510156102b85750805b601f840160051c820191505b818110156102d857600081556001016102c4565b50505b505050565b81516001600160401b038111156102f9576102f9610241565b61030d816103078454610257565b84610291565b6020601f82116001811461034157600083156103295750848201515b600019600385901b1c1916600184901b1784556102d8565b600084815260208120601f198516915b828110156103715787850151825560209485019460019092019101610351565b508482101561038f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b818110156103cc57602081860181015160408684010152016103af565b506000604082850101526040601f19601f83011684010191505092915050565b8051602080830151919081101561028b5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161247761046a6000396000610b2f01526000610b0201526000610a6301526000610a3b01526000610996015260006109c0015260006109ea01526124776000f3fe6080604052600436106101225760003560e01c80637ca0845b116100a0578063afa3b97b11610064578063afa3b97b1461031e578063b52acf7914610331578063bf2b135b14610344578063f3fef3a314610364578063fa09e6301461038457600080fd5b80637ca0845b1461026d5780637ecebe001461028d57806384b0196e146102ad5780638da5cb5b146102d5578063a46022d21461030d57600080fd5b80631c5e048f116100e75780631c5e048f146101e35780633644e51514610203578063540bcb431461021857806354fd4d50146102385780636494876f1461024d57600080fd5b80627f832d1461012e57806302b62938146101505780630aa781ed146101835780630f13f10b146101a357806313af4035146101c357600080fd5b3661012957005b600080fd5b34801561013a57600080fd5b5061014e610149366004611cc7565b6103a4565b005b34801561015c57600080fd5b5061017061016b366004611d2d565b6103af565b6040519081526020015b60405180910390f35b34801561018f57600080fd5b5061014e61019e366004611d48565b610439565b3480156101af57600080fd5b5061014e6101be366004611d8e565b610442565b3480156101cf57600080fd5b5061014e6101de366004611d2d565b61044b565b3480156101ef57600080fd5b5061014e6101fe366004611dd6565b6104bf565b34801561020f57600080fd5b50610170610536565b34801561022457600080fd5b5061014e610233366004611e4b565b610545565b34801561024457600080fd5b50610170600181565b34801561025957600080fd5b5061014e610268366004611f0b565b6105c6565b34801561027957600080fd5b5061014e610288366004611f64565b6105d3565b34801561029957600080fd5b506101706102a8366004611d2d565b6105da565b3480156102b957600080fd5b506102c26105f8565b60405161017a9796959493929190611fde565b3480156102e157600080fd5b506003546102f5906001600160a01b031681565b6040516001600160a01b03909116815260200161017a565b61014e61031b36600461208e565b50565b61014e61032c36600461208e565b61063e565b61014e61033f3660046120c2565b61068d565b34801561035057600080fd5b5061014e61035f366004612164565b610849565b34801561037057600080fd5b5061014e61037f3660046121c7565b610858565b34801561039057600080fd5b5061014e61039f366004611d2d565b61089b565b8183825183a2505050565b60006001600160a01b0382166103c6575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e91906121f1565b92915050565b919050565b81815182a15050565b61031b81610946565b6003546001600160a01b0316156104755760405163cf04b1bb60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90600090a250565b6003546001600160a01b03163314806104d757503330145b6104f4576040516330cd747160e01b815260040160405180910390fd5b60005b81811015610531576105298383838181106105145761051461220a565b905060200201602081019061039f9190611d2d565b6001016104f7565b505050565b6000610540610989565b905090565b61056f6040518060400160405280600981526020016826b2b690223ab6b81d60b91b815250610946565b815b818110156105c0576105b881604051806040016040528060038152602001620101e960ed1b8152508684815181106105ab576105ab61220a565b6020026020010151610ab4565b600101610571565b50505050565b818385835184a350505050565b805181a050565b6001600160a01b03811660009081526002602052604081205461042e565b60006060806000806000606061060c610afb565b610614610b28565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6003546001600160a01b03163314610669576040516330cd747160e01b815260040160405180910390fd5b61031b813561067b6020840184612220565b6106886040860186612220565b610b55565b428310156106cc5760405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b60448201526064015b60405180910390fd5b60007fa2fd10f4fe9ca2e3b151c55a4c8ac344aa38d70cc05298a0a380ebdba1595dc485356107066107016020890189612220565b611123565b61071b61071660408a018a612220565b61129a565b6003546001600160a01b031660009081526002602052604090208054600181019091556040805160208101969096528501939093526060840191909152608083015260a082015260c0810185905260e001604051602081830303815290604052805190602001209050600061078f826113e0565b90506107d18185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061140d92505050565b6003546001600160a01b039081169116146108225760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016106c3565b61084186356108346020890189612220565b61068860408b018b612220565b505050505050565b81838587845185a45050505050565b6003546001600160a01b031633148061087057503330145b61088d576040516330cd747160e01b815260040160405180910390fd5b6108978282611437565b5050565b6003546001600160a01b03163314806108b357503330145b6108d0576040516330cd747160e01b815260040160405180910390fd5b6040516256c52760e31b81526001600160a01b038216600482015260009030906302b6293890602401602060405180830381865afa158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a91906121f1565b90506108978282611437565b61031b8160405160240161095a9190612270565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611549565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109e257507f000000000000000000000000000000000000000000000000000000000000000046145b15610a0c57507f000000000000000000000000000000000000000000000000000000000000000090565b610540604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610531838383604051602401610acc93929190612283565b60408051601f198184030181529190526020810180516001600160e01b0316630dea9f5360e21b179052611549565b60606105407f00000000000000000000000000000000000000000000000000000000000000006000611552565b60606105407f00000000000000000000000000000000000000000000000000000000000000006001611552565b6000610b6d6001600160401b03604088901c166115fd565b60006001600160401b0387166001600160401b03811115610b9057610b90611bff565b604051908082528060200260200182016040528015610bb9578160200160208202803683370190505b5090505b84821015611119576000868684818110610bd957610bd961220a565b9050602002810190610beb91906122ac565b359050366000888886818110610c0357610c0361220a565b9050602002810190610c1591906122ac565b610c23906020810190612220565b915091506003831015610ef7576060600060018514610c43576002610c46565b60035b60ff169050610c5581846122e2565b6001600160401b03811115610c6c57610c6c611bff565b604051908082528060200260200182016040528015610c95578160200160208202803683370190505b50805190925015610d4957838382818110610cb257610cb261220a565b9050602002013560001c82600081518110610ccf57610ccf61220a565b60209081029190910101526000610ce78260016122f5565b90505b83811015610d4757610d19858583818110610d0757610d0761220a565b9050602002013560001c888c8c611698565b83610d2484846122e2565b81518110610d3457610d3461220a565b6020908102919091010152600101610cea565b505b6000608085856000818110610d6057610d6061220a565b9050602002013560001c901c905060006fffffffffffffffffffffffffffffffff86866000818110610d9457610d9461220a565b9050602002013560001c16905087518183610daf91906122f5565b1115610dd857604051631f1ce91160e11b8152600481018a9052602481018890526044016106c3565b6000610e0287876001818110610df057610df061220a565b9050602002013560001c8a8e8e611698565b905087610e3357602082026020840260208b01016020600188510302600401603c8801846127105a03fa9350610ec9565b6000198801610e9d57610e5287876002818110610df057610df061220a565b93508451600003610e725760008060008087856127105a03f19350610ec9565b602082026020840260208b01016020600188510302600401603c880187856127105a03f19350610ec9565b6001198801610ec957604051631f1ce91160e11b8152600481018b9052602481018990526044016106c3565b83600003610eed576040516307f3476960e31b8152600481018b90526024016106c3565b5050505050611104565b6003198301610f9357600082826000818110610f1557610f1561220a565b6020029190910135915050888111610f32579450610bbd92505050565b6000198103610f465750505050505061111c565b6001600160fc1b038103610f7057604051639df55d1f60e01b8152600481018790526024016106c3565b60405163237f57bf60e11b815260048101879052602481018290526044016106c3565b6002198301611069576000610fc683836000818110610fb457610fb461220a565b9050602002013560001c868a8a611698565b9050801561106357600083836001818110610fe357610fe361220a565b6020029190910135915050898111611001579550610bbd9350505050565b6000198103611016575050505050505061111c565b6001600160fc1b03810361104057604051639df55d1f60e01b8152600481018890526024016106c3565b60405163237f57bf60e11b815260048101889052602481018290526044016106c3565b50611104565b608083106110c657611099828260008181106110875761108761220a565b9050602002013560001c858989611698565b846110a56080866122e2565b815181106110b5576110b561220a565b602002602001018181525050611104565b600a1983016110e1576110dc8460008651610545565b611104565b604051631f1ce91160e11b815260048101869052602481018490526044016106c3565b8461110e81612308565b955050505050610bbd565b50505b5050505050565b600080826001600160401b0381111561113e5761113e611bff565b604051908082528060200260200182016040528015611167578160200160208202803683370190505b50905060005b83811015611269577fadc17770459c2efd3eb3b14f0aeee00df3c3ad8e54e78f1f6b5e18429e5101398585838181106111a8576111a861220a565b90506020028101906111ba91906122ac565b358686848181106111cd576111cd61220a565b90506020028101906111df91906122ac565b6111ed906020810190612220565b6040516020016111fe929190612321565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001208282815181106112565761125661220a565b602090810291909101015260010161116d565b508060405160200161127b919061234a565b6040516020818303038152906040528051906020012091505092915050565b600080826001600160401b038111156112b5576112b5611bff565b6040519080825280602002602001820160405280156112de578160200160208202803683370190505b50905060005b83811015611269577fab09a839ac3b4881f81abde74569f3a5d716f8531b82d7211ac61b912d3db4f185858381811061131f5761131f61220a565b905060200281019061133191906122ac565b358686848181106113445761134461220a565b905060200281019061135691906122ac565b611364906020810190612220565b604051602001611375929190612321565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001208282815181106113cd576113cd61220a565b60209081029190910101526001016112e4565b600061042e6113ed610989565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061141d86866119a2565b92509250925061142d82826119ef565b5090949350505050565b6001600160a01b03821661147f576003546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610531573d6000803e3d6000fd5b60035460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af11580156114d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f69190612380565b600354839130916001600160a01b03169084906108415760405163cd3f165960e01b81526001600160a01b03948516600482015292841660248401529216604482015260648101919091526084016106c3565b61031b81611aa8565b606060ff831461156c5761156583611ac9565b905061042e565b818054611578906123a2565b80601f01602080910402602001604051908101604052809291908181526020018280546115a4906123a2565b80156115f15780601f106115c6576101008083540402835291602001916115f1565b820191906000526020600020905b8154815290600101906020018083116115d457829003601f168201915b5050505050905061042e565b806000036116085750565b6000306001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166c91906121f1565b9050808214610897576040516317cd0afb60e11b815260048101829052602481018390526044016106c3565b6000600160ff1b85166000036116af57508361199a565b600160fe1b85166000036116e45783600160ff1b8618815181106116d5576116d561220a565b6020026020010151905061199a565b600360fe1b9490941893368383878181106117015761170161220a565b905060200281019061171391906122ac565b905080358061174d576117296020830183612220565b600081811061173a5761173a61220a565b9050602002013560001c9250505061199a565b602f198101611761575030915061199a9050565b6032198101611775575033915061199a9050565b604119810161178857429250505061199a565b603319810161179b57349250505061199a565b60006117d06117ad6020850185612220565b60008181106117be576117be61220a565b9050602002013560001c888888611698565b905060301982016117ef576001600160a01b031631925061199a915050565b60181982016118035719925061199a915050565b60006118386118156020860186612220565b60018181106118265761182661220a565b9050602002013560001c898989611698565b905060001983016118585761184d81836122f5565b94505050505061199a565b600119830161186b5761184d81836123d6565b600219830161187e5761184d81836122e2565b60031983016118915761184d8183612403565b60051983016118a45761184d8183612417565b600f1983016118c9578082106118bb57600061184d565b60001994505050505061199a565b60101983016118e0578082116118bb57600061184d565b60111983016118f7578082146118bb57600061184d565b601519830161190b5716925061199a915050565b601619830161191f5717925061199a915050565b60171983016119335718925061199a915050565b601a198301611947571b925061199a915050565b601b19830161195b571c925061199a915050565b60405162461bcd60e51b8152602060048201526014602482015273756e6b6e6f776e207175616e746974795479706560601b60448201526064016106c3565b949350505050565b600080600083516041036119dc5760208401516040850151606086015160001a6119ce88828585611b08565b9550955095505050506119e8565b50508151600091506002905b9250925092565b6000826003811115611a0357611a0361242b565b03611a0c575050565b6001826003811115611a2057611a2061242b565b03611a3e5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611a5257611a5261242b565b03611a735760405163fce698f760e01b8152600481018290526024016106c3565b6003826003811115611a8757611a8761242b565b03610897576040516335e2f38360e21b8152600481018290526024016106c3565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60606000611ad683611bd7565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611b435750600091506003905082611bcd565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611b97573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bc357506000925060019150829050611bcd565b9250600091508190505b9450945094915050565b600060ff8216601f81111561042e57604051632cd44ac360e21b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611c3d57611c3d611bff565b604052919050565b6000806001600160401b03841115611c5f57611c5f611bff565b50601f8301601f1916602001611c7481611c15565b915050828152838383011115611c8957600080fd5b828260208301376000602084830101529392505050565b600082601f830112611cb157600080fd5b611cc083833560208501611c45565b9392505050565b600080600060608486031215611cdc57600080fd5b833592506020840135915060408401356001600160401b03811115611d0057600080fd5b611d0c86828701611ca0565b9150509250925092565b80356001600160a01b038116811461043457600080fd5b600060208284031215611d3f57600080fd5b611cc082611d16565b60008060408385031215611d5b57600080fd5b8235915060208301356001600160401b03811115611d7857600080fd5b611d8485828601611ca0565b9150509250929050565b600060208284031215611da057600080fd5b81356001600160401b03811115611db657600080fd5b8201601f81018413611dc757600080fd5b61199a84823560208401611c45565b60008060208385031215611de957600080fd5b82356001600160401b03811115611dff57600080fd5b8301601f81018513611e1057600080fd5b80356001600160401b03811115611e2657600080fd5b8560208260051b8401011115611e3b57600080fd5b6020919091019590945092505050565b600080600060608486031215611e6057600080fd5b83356001600160401b03811115611e7657600080fd5b8401601f81018613611e8757600080fd5b80356001600160401b03811115611ea057611ea0611bff565b8060051b611eb060208201611c15565b91825260208184018101929081019089841115611ecc57600080fd5b6020850194505b83851015611ef257843580835260209586019590935090910190611ed3565b9960208901359950604090980135979650505050505050565b60008060008060808587031215611f2157600080fd5b84359350602085013592506040850135915060608501356001600160401b03811115611f4c57600080fd5b611f5887828801611ca0565b91505092959194509250565b600060208284031215611f7657600080fd5b81356001600160401b03811115611f8c57600080fd5b61199a84828501611ca0565b6000815180845260005b81811015611fbe57602081850181015186830182015201611fa2565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e060208201526000611ffd60e0830189611f98565b828103604084015261200f8189611f98565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015612065578351835260209384019390920191600101612047565b50909b9a5050505050505050505050565b60006060828403121561208857600080fd5b50919050565b6000602082840312156120a057600080fd5b81356001600160401b038111156120b657600080fd5b61199a84828501612076565b600080600080606085870312156120d857600080fd5b84356001600160401b038111156120ee57600080fd5b6120fa87828801612076565b9450506020850135925060408501356001600160401b0381111561211d57600080fd5b8501601f8101871361212e57600080fd5b80356001600160401b0381111561214457600080fd5b87602082840101111561215657600080fd5b949793965060200194505050565b600080600080600060a0868803121561217c57600080fd5b8535945060208601359350604086013592506060860135915060808601356001600160401b038111156121ae57600080fd5b6121ba88828901611ca0565b9150509295509295909350565b600080604083850312156121da57600080fd5b6121e383611d16565b946020939093013593505050565b60006020828403121561220357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261223757600080fd5b8301803591506001600160401b0382111561225157600080fd5b6020019150600581901b360382131561226957600080fd5b9250929050565b602081526000611cc06020830184611f98565b83815260606020820152600061229c6060830185611f98565b9050826040830152949350505050565b60008235603e198336030181126122c257600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561042e5761042e6122cc565b8082018082111561042e5761042e6122cc565b60006001820161231a5761231a6122cc565b5060010190565b60006001600160fb1b0383111561233757600080fd5b8260051b80858437919091019392505050565b8151600090829060208501835b82811015612375578151845260209384019390910190600101612357565b509195945050505050565b60006020828403121561239257600080fd5b81518015158114611cc057600080fd5b600181811c908216806123b657607f821691505b60208210810361208857634e487b7160e01b600052602260045260246000fd5b808202811582820484141761042e5761042e6122cc565b634e487b7160e01b600052601260045260246000fd5b600082612412576124126123ed565b500490565b600082612426576124266123ed565b500690565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220aa6b92c153a5be295b5d6042662745c95dbf1d0a1e10b6663460ec20de8c73c764736f6c634300081b0033";

type OwnedBrevityInterpreterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnedBrevityInterpreterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnedBrevityInterpreter__factory extends ContractFactory {
  constructor(...args: OwnedBrevityInterpreterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      OwnedBrevityInterpreter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OwnedBrevityInterpreter__factory {
    return super.connect(runner) as OwnedBrevityInterpreter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnedBrevityInterpreterInterface {
    return new Interface(_abi) as OwnedBrevityInterpreterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OwnedBrevityInterpreter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OwnedBrevityInterpreter;
  }
}
