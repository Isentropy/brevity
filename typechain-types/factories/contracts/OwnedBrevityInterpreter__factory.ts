/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OwnedBrevityInterpreter,
  OwnedBrevityInterpreterInterface,
} from "../../contracts/OwnedBrevityInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpDest",
        type: "uint256",
      },
    ],
    name: "BadJump",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "opcode",
        type: "uint256",
      },
    ],
    name: "NotPermitted",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerAlreadySet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
    ],
    name: "Reverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "found",
        type: "uint256",
      },
    ],
    name: "WrongBrevityVersion",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
    ],
    name: "noop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "mem",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "printMem",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
    ],
    name: "run",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "runMeta",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "withdrawAllMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b5060405161254338038061254383398101604081905261003091610211565b6040805180820182526004815263213932bb60e11b602080830191909152825180840190935260018352603160f81b908301529061006f826000610123565b6101205261007e816001610123565b61014052815160208084019190912060e052815190820120610100524660a05261010b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261011d81610156565b50610410565b600060208351101561013f57610138836101ca565b9050610150565b8161014a84826102e0565b5060ff90505b92915050565b6003546001600160a01b0316156101805760405163cf04b1bb60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90600090a250565b600080829050601f815111156101fe578260405163305a27a960e01b81526004016101f5919061039e565b60405180910390fd5b8051610209826103ec565b179392505050565b60006020828403121561022357600080fd5b81516001600160a01b038116811461023a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061026b57607f821691505b60208210810361028b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102db57806000526020600020601f840160051c810160208510156102b85750805b601f840160051c820191505b818110156102d857600081556001016102c4565b50505b505050565b81516001600160401b038111156102f9576102f9610241565b61030d816103078454610257565b84610291565b6020601f82116001811461034157600083156103295750848201515b600019600385901b1c1916600184901b1784556102d8565b600084815260208120601f198516915b828110156103715787850151825560209485019460019092019101610351565b508482101561038f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b818110156103cc57602081860181015160408684010152016103af565b506000604082850101526040601f19601f83011684010191505092915050565b8051602080830151919081101561028b5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516120d961046a60003960006109ee015260006109c1015260006108df015260006108b7015260006108120152600061083c0152600061086601526120d96000f3fe6080604052600436106100e15760003560e01c806384b0196e1161007f578063afa3b97b11610059578063afa3b97b1461023d578063b52acf7914610250578063f3fef3a314610263578063fa09e6301461028357600080fd5b806384b0196e146101cc5780638da5cb5b146101f4578063a46022d21461022c57600080fd5b80633644e515116100bb5780633644e51514610162578063540bcb431461017757806354fd4d50146101975780637ecebe00146101ac57600080fd5b806302b62938146100ed57806313af4035146101205780631c5e048f1461014257600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004611ad5565b6102a3565b6040519081526020015b60405180910390f35b34801561012c57600080fd5b5061014061013b366004611ad5565b61032d565b005b34801561014e57600080fd5b5061014061015d366004611af7565b6103a1565b34801561016e57600080fd5b5061010d610418565b34801561018357600080fd5b50610140610192366004611b82565b610427565b3480156101a357600080fd5b5061010d600181565b3480156101b857600080fd5b5061010d6101c7366004611ad5565b6104a8565b3480156101d857600080fd5b506101e16104c6565b6040516101179796959493929190611ca3565b34801561020057600080fd5b50600354610214906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b61014061023a366004611d53565b50565b61014061024b366004611d53565b61050c565b61014061025e366004611d87565b61055b565b34801561026f57600080fd5b5061014061027e366004611e29565b610717565b34801561028f57600080fd5b5061014061029e366004611ad5565b61075a565b60006001600160a01b0382166102ba575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190611e53565b92915050565b919050565b6003546001600160a01b0316156103575760405163cf04b1bb60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90600090a250565b6003546001600160a01b03163314806103b957503330145b6103d6576040516330cd747160e01b815260040160405180910390fd5b60005b818110156104135761040b8383838181106103f6576103f6611e6c565b905060200201602081019061029e9190611ad5565b6001016103d9565b505050565b6000610422610805565b905090565b6104516040518060400160405280600981526020016826b2b690223ab6b81d60b91b815250610930565b815b818110156104a25761049a81604051806040016040528060038152602001620101e960ed1b81525086848151811061048d5761048d611e6c565b6020026020010151610973565b600101610453565b50505050565b6001600160a01b038116600090815260026020526040812054610322565b6000606080600080600060606104da6109ba565b6104e26109e7565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6003546001600160a01b03163314610537576040516330cd747160e01b815260040160405180910390fd5b61023a81356105496020840184611e82565b6105566040860186611e82565b610a14565b4283101561059a5760405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b60448201526064015b60405180910390fd5b60007fa2fd10f4fe9ca2e3b151c55a4c8ac344aa38d70cc05298a0a380ebdba1595dc485356105d46105cf6020890189611e82565b610fe2565b6105e96105e460408a018a611e82565b611159565b6003546001600160a01b031660009081526002602052604090208054600181019091556040805160208101969096528501939093526060840191909152608083015260a082015260c0810185905260e001604051602081830303815290604052805190602001209050600061065d8261129f565b905061069f8185858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112cc92505050565b6003546001600160a01b039081169116146106f05760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610591565b61070f86356107026020890189611e82565b61055660408b018b611e82565b505050505050565b6003546001600160a01b031633148061072f57503330145b61074c576040516330cd747160e01b815260040160405180910390fd5b61075682826112f6565b5050565b6003546001600160a01b031633148061077257503330145b61078f576040516330cd747160e01b815260040160405180910390fd5b6040516256c52760e31b81526001600160a01b038216600482015260009030906302b6293890602401602060405180830381865afa1580156107d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f99190611e53565b905061075682826112f6565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561085e57507f000000000000000000000000000000000000000000000000000000000000000046145b1561088857507f000000000000000000000000000000000000000000000000000000000000000090565b610422604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b61023a816040516024016109449190611ed2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611408565b61041383838360405160240161098b93929190611ee5565b60408051601f198184030181529190526020810180516001600160e01b0316630dea9f5360e21b179052611408565b60606104227f00000000000000000000000000000000000000000000000000000000000000006000611411565b60606104227f00000000000000000000000000000000000000000000000000000000000000006001611411565b6000610a2c6001600160401b03604088901c166114bc565b60006001600160401b0387166001600160401b03811115610a4f57610a4f611b6c565b604051908082528060200260200182016040528015610a78578160200160208202803683370190505b5090505b84821015610fd8576000868684818110610a9857610a98611e6c565b9050602002810190610aaa9190611f0e565b359050366000888886818110610ac257610ac2611e6c565b9050602002810190610ad49190611f0e565b610ae2906020810190611e82565b915091506003831015610db6576060600060018514610b02576002610b05565b60035b60ff169050610b148184611f44565b6001600160401b03811115610b2b57610b2b611b6c565b604051908082528060200260200182016040528015610b54578160200160208202803683370190505b50805190925015610c0857838382818110610b7157610b71611e6c565b9050602002013560001c82600081518110610b8e57610b8e611e6c565b60209081029190910101526000610ba6826001611f57565b90505b83811015610c0657610bd8858583818110610bc657610bc6611e6c565b9050602002013560001c888c8c611557565b83610be38484611f44565b81518110610bf357610bf3611e6c565b6020908102919091010152600101610ba9565b505b6000608085856000818110610c1f57610c1f611e6c565b9050602002013560001c901c905060006fffffffffffffffffffffffffffffffff86866000818110610c5357610c53611e6c565b9050602002013560001c16905087518183610c6e9190611f57565b1115610c9757604051631f1ce91160e11b8152600481018a905260248101889052604401610591565b6000610cc187876001818110610caf57610caf611e6c565b9050602002013560001c8a8e8e611557565b905087610cf257602082026020840260208b01016020600188510302600401603c8801846127105a03fa9350610d88565b6000198801610d5c57610d1187876002818110610caf57610caf611e6c565b93508451600003610d315760008060008087856127105a03f19350610d88565b602082026020840260208b01016020600188510302600401603c880187856127105a03f19350610d88565b6001198801610d8857604051631f1ce91160e11b8152600481018b905260248101899052604401610591565b83600003610dac576040516307f3476960e31b8152600481018b9052602401610591565b5050505050610fc3565b6003198301610e5257600082826000818110610dd457610dd4611e6c565b6020029190910135915050888111610df1579450610a7c92505050565b6000198103610e0557505050505050610fdb565b6001600160fc1b038103610e2f57604051639df55d1f60e01b815260048101879052602401610591565b60405163237f57bf60e11b81526004810187905260248101829052604401610591565b6002198301610f28576000610e8583836000818110610e7357610e73611e6c565b9050602002013560001c868a8a611557565b90508015610f2257600083836001818110610ea257610ea2611e6c565b6020029190910135915050898111610ec0579550610a7c9350505050565b6000198103610ed55750505050505050610fdb565b6001600160fc1b038103610eff57604051639df55d1f60e01b815260048101889052602401610591565b60405163237f57bf60e11b81526004810188905260248101829052604401610591565b50610fc3565b60808310610f8557610f5882826000818110610f4657610f46611e6c565b9050602002013560001c858989611557565b84610f64608086611f44565b81518110610f7457610f74611e6c565b602002602001018181525050610fc3565b600a198301610fa057610f9b8460008651610427565b610fc3565b604051631f1ce91160e11b81526004810186905260248101849052604401610591565b84610fcd81611f6a565b955050505050610a7c565b50505b5050505050565b600080826001600160401b03811115610ffd57610ffd611b6c565b604051908082528060200260200182016040528015611026578160200160208202803683370190505b50905060005b83811015611128577fadc17770459c2efd3eb3b14f0aeee00df3c3ad8e54e78f1f6b5e18429e51013985858381811061106757611067611e6c565b90506020028101906110799190611f0e565b3586868481811061108c5761108c611e6c565b905060200281019061109e9190611f0e565b6110ac906020810190611e82565b6040516020016110bd929190611f83565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091526080016040516020818303038152906040528051906020012082828151811061111557611115611e6c565b602090810291909101015260010161102c565b508060405160200161113a9190611fac565b6040516020818303038152906040528051906020012091505092915050565b600080826001600160401b0381111561117457611174611b6c565b60405190808252806020026020018201604052801561119d578160200160208202803683370190505b50905060005b83811015611128577fab09a839ac3b4881f81abde74569f3a5d716f8531b82d7211ac61b912d3db4f18585838181106111de576111de611e6c565b90506020028101906111f09190611f0e565b3586868481811061120357611203611e6c565b90506020028101906112159190611f0e565b611223906020810190611e82565b604051602001611234929190611f83565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091526080016040516020818303038152906040528051906020012082828151811061128c5761128c611e6c565b60209081029190910101526001016111a3565b60006103226112ac610805565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806112dc8686611861565b9250925092506112ec82826118ae565b5090949350505050565b6001600160a01b03821661133e576003546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610413573d6000803e3d6000fd5b60035460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015611391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b59190611fe2565b600354839130916001600160a01b031690849061070f5760405163cd3f165960e01b81526001600160a01b0394851660048201529284166024840152921660448201526064810191909152608401610591565b61023a81611967565b606060ff831461142b5761142483611988565b9050610322565b81805461143790612004565b80601f016020809104026020016040519081016040528092919081815260200182805461146390612004565b80156114b05780601f10611485576101008083540402835291602001916114b0565b820191906000526020600020905b81548152906001019060200180831161149357829003601f168201915b50505050509050610322565b806000036114c75750565b6000306001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152b9190611e53565b9050808214610756576040516317cd0afb60e11b81526004810182905260248101839052604401610591565b6000600160ff1b851660000361156e575083611859565b600160fe1b85166000036115a35783600160ff1b86188151811061159457611594611e6c565b60200260200101519050611859565b600360fe1b9490941893368383878181106115c0576115c0611e6c565b90506020028101906115d29190611f0e565b905080358061160c576115e86020830183611e82565b60008181106115f9576115f9611e6c565b9050602002013560001c92505050611859565b602f19810161162057503091506118599050565b603219810161163457503391506118599050565b6041198101611647574292505050611859565b603319810161165a573492505050611859565b600061168f61166c6020850185611e82565b600081811061167d5761167d611e6c565b9050602002013560001c888888611557565b905060301982016116ae576001600160a01b0316319250611859915050565b60181982016116c257199250611859915050565b60006116f76116d46020860186611e82565b60018181106116e5576116e5611e6c565b9050602002013560001c898989611557565b905060001983016117175761170c8183611f57565b945050505050611859565b600119830161172a5761170c8183612038565b600219830161173d5761170c8183611f44565b60031983016117505761170c8183612065565b60051983016117635761170c8183612079565b600f1983016117885780821061177a57600061170c565b600019945050505050611859565b601019830161179f5780821161177a57600061170c565b60111983016117b65780821461177a57600061170c565b60151983016117ca57169250611859915050565b60161983016117de57179250611859915050565b60171983016117f257189250611859915050565b601a198301611806571b9250611859915050565b601b19830161181a571c9250611859915050565b60405162461bcd60e51b8152602060048201526014602482015273756e6b6e6f776e207175616e746974795479706560601b6044820152606401610591565b949350505050565b6000806000835160410361189b5760208401516040850151606086015160001a61188d888285856119c7565b9550955095505050506118a7565b50508151600091506002905b9250925092565b60008260038111156118c2576118c261208d565b036118cb575050565b60018260038111156118df576118df61208d565b036118fd5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156119115761191161208d565b036119325760405163fce698f760e01b815260048101829052602401610591565b60038260038111156119465761194661208d565b03610756576040516335e2f38360e21b815260048101829052602401610591565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6060600061199583611a96565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611a025750600091506003905082611a8c565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a56573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8257506000925060019150829050611a8c565b9250600091508190505b9450945094915050565b600060ff8216601f81111561032257604051632cd44ac360e21b815260040160405180910390fd5b80356001600160a01b038116811461032857600080fd5b600060208284031215611ae757600080fd5b611af082611abe565b9392505050565b60008060208385031215611b0a57600080fd5b82356001600160401b03811115611b2057600080fd5b8301601f81018513611b3157600080fd5b80356001600160401b03811115611b4757600080fd5b8560208260051b8401011115611b5c57600080fd5b6020919091019590945092505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215611b9757600080fd5b83356001600160401b03811115611bad57600080fd5b8401601f81018613611bbe57600080fd5b80356001600160401b03811115611bd757611bd7611b6c565b8060051b604051601f19603f83011681018181106001600160401b0382111715611c0357611c03611b6c565b604052918252602081840181019290810189841115611c2157600080fd5b6020850194505b83851015611c4457843580825260209586019590935001611c28565b5098602088013598506040909701359695505050505050565b6000815180845260005b81811015611c8357602081850181015186830182015201611c67565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e060208201526000611cc260e0830189611c5d565b8281036040840152611cd48189611c5d565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015611d2a578351835260209384019390920191600101611d0c565b50909b9a5050505050505050505050565b600060608284031215611d4d57600080fd5b50919050565b600060208284031215611d6557600080fd5b81356001600160401b03811115611d7b57600080fd5b61185984828501611d3b565b60008060008060608587031215611d9d57600080fd5b84356001600160401b03811115611db357600080fd5b611dbf87828801611d3b565b9450506020850135925060408501356001600160401b03811115611de257600080fd5b8501601f81018713611df357600080fd5b80356001600160401b03811115611e0957600080fd5b876020828401011115611e1b57600080fd5b949793965060200194505050565b60008060408385031215611e3c57600080fd5b611e4583611abe565b946020939093013593505050565b600060208284031215611e6557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611e9957600080fd5b8301803591506001600160401b03821115611eb357600080fd5b6020019150600581901b3603821315611ecb57600080fd5b9250929050565b602081526000611af06020830184611c5d565b838152606060208201526000611efe6060830185611c5d565b9050826040830152949350505050565b60008235603e19833603018112611f2457600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561032257610322611f2e565b8082018082111561032257610322611f2e565b600060018201611f7c57611f7c611f2e565b5060010190565b60006001600160fb1b03831115611f9957600080fd5b8260051b80858437919091019392505050565b8151600090829060208501835b82811015611fd7578151845260209384019390910190600101611fb9565b509195945050505050565b600060208284031215611ff457600080fd5b81518015158114611af057600080fd5b600181811c9082168061201857607f821691505b602082108103611d4d57634e487b7160e01b600052602260045260246000fd5b808202811582820484141761032257610322611f2e565b634e487b7160e01b600052601260045260246000fd5b6000826120745761207461204f565b500490565b6000826120885761208861204f565b500690565b634e487b7160e01b600052602160045260246000fdfea26469706673582212207403ade8f6a3b55a42b4fe6a9af287e5bf35dbac972752b8287a165f7510fbdc64736f6c634300081b0033";

type OwnedBrevityInterpreterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnedBrevityInterpreterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnedBrevityInterpreter__factory extends ContractFactory {
  constructor(...args: OwnedBrevityInterpreterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      OwnedBrevityInterpreter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OwnedBrevityInterpreter__factory {
    return super.connect(runner) as OwnedBrevityInterpreter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnedBrevityInterpreterInterface {
    return new Interface(_abi) as OwnedBrevityInterpreterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OwnedBrevityInterpreter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OwnedBrevityInterpreter;
  }
}
