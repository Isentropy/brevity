/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OwnedBrevityInterpreter,
  OwnedBrevityInterpreterInterface,
} from "../../contracts/OwnedBrevityInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpDest",
        type: "uint256",
      },
    ],
    name: "BadJump",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "opcode",
        type: "uint256",
      },
    ],
    name: "NotPermitted",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerAlreadySet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
    ],
    name: "Reverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "found",
        type: "uint256",
      },
    ],
    name: "WrongBrevityVersion",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "logData",
        type: "string",
      },
    ],
    name: "consoleLog",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log0",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic2",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic3",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log3",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "topic1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "topic4",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "logData",
        type: "bytes",
      },
    ],
    name: "log4",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
    ],
    name: "noop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "mem",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "printMem",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
    ],
    name: "run",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "runMeta",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "withdrawAllMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b506040516128f03803806128f083398101604081905261003091610211565b6040805180820182526004815263213932bb60e11b602080830191909152825180840190935260018352603160f81b908301529061006f826000610123565b6101205261007e816001610123565b61014052815160208084019190912060e052815190820120610100524660a05261010b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261011d81610156565b50610410565b600060208351101561013f57610138836101ca565b9050610150565b8161014a84826102e0565b5060ff90505b92915050565b6003546001600160a01b0316156101805760405163cf04b1bb60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90600090a250565b600080829050601f815111156101fe578260405163305a27a960e01b81526004016101f5919061039e565b60405180910390fd5b8051610209826103ec565b179392505050565b60006020828403121561022357600080fd5b81516001600160a01b038116811461023a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061026b57607f821691505b60208210810361028b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102db57806000526020600020601f840160051c810160208510156102b85750805b601f840160051c820191505b818110156102d857600081556001016102c4565b50505b505050565b81516001600160401b038111156102f9576102f9610241565b61030d816103078454610257565b84610291565b6020601f82116001811461034157600083156103295750848201515b600019600385901b1c1916600184901b1784556102d8565b600084815260208120601f198516915b828110156103715787850151825560209485019460019092019101610351565b508482101561038f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b818110156103cc57602081860181015160408684010152016103af565b506000604082850101526040601f19601f83011684010191505092915050565b8051602080830151919081101561028b5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161248661046a6000396000610b3e01526000610b1101526000610a7201526000610a4a015260006109a5015260006109cf015260006109f901526124866000f3fe6080604052600436106101225760003560e01c80637ca0845b116100a0578063afa3b97b11610064578063afa3b97b1461031e578063b52acf7914610331578063bf2b135b14610344578063f3fef3a314610364578063fa09e6301461038457600080fd5b80637ca0845b1461026d5780637ecebe001461028d57806384b0196e146102ad5780638da5cb5b146102d5578063a46022d21461030d57600080fd5b80631c5e048f116100e75780631c5e048f146101e35780633644e51514610203578063540bcb431461021857806354fd4d50146102385780636494876f1461024d57600080fd5b80627f832d1461012e57806302b62938146101505780630aa781ed146101835780630f13f10b146101a357806313af4035146101c357600080fd5b3661012957005b600080fd5b34801561013a57600080fd5b5061014e610149366004611cd6565b6103a4565b005b34801561015c57600080fd5b5061017061016b366004611d3c565b6103b2565b6040519081526020015b60405180910390f35b34801561018f57600080fd5b5061014e61019e366004611d57565b61043c565b3480156101af57600080fd5b5061014e6101be366004611d9d565b610448565b3480156101cf57600080fd5b5061014e6101de366004611d3c565b610451565b3480156101ef57600080fd5b5061014e6101fe366004611de5565b6104c5565b34801561020f57600080fd5b5061017061053c565b34801561022457600080fd5b5061014e610233366004611e5a565b61054b565b34801561024457600080fd5b50610170600181565b34801561025957600080fd5b5061014e610268366004611f1a565b6105cc565b34801561027957600080fd5b5061014e610288366004611f73565b6105dc565b34801561029957600080fd5b506101706102a8366004611d3c565b6105e6565b3480156102b957600080fd5b506102c2610604565b60405161017a9796959493929190611fed565b3480156102e157600080fd5b506003546102f5906001600160a01b031681565b6040516001600160a01b03909116815260200161017a565b61014e61031b36600461209d565b50565b61014e61032c36600461209d565b61064a565b61014e61033f3660046120d1565b610699565b34801561035057600080fd5b5061014e61035f366004612173565b610855565b34801561037057600080fd5b5061014e61037f3660046121d6565b610867565b34801561039057600080fd5b5061014e61039f366004611d3c565b6108aa565b8183825160208401a2505050565b60006001600160a01b0382166103c9575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104319190612200565b92915050565b919050565b81815160208301a15050565b61031b81610955565b6003546001600160a01b03161561047b5760405163cf04b1bb60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90600090a250565b6003546001600160a01b03163314806104dd57503330145b6104fa576040516330cd747160e01b815260040160405180910390fd5b60005b818110156105375761052f83838381811061051a5761051a612219565b905060200201602081019061039f9190611d3c565b6001016104fd565b505050565b6000610546610998565b905090565b6105756040518060400160405280600981526020016826b2b690223ab6b81d60b91b815250610955565b815b818110156105c6576105be81604051806040016040528060038152602001620101e960ed1b8152508684815181106105b1576105b1612219565b6020026020010151610ac3565b600101610577565b50505050565b818385835160208501a350505050565b805160208201a050565b6001600160a01b038116600090815260026020526040812054610431565b600060608060008060006060610618610b0a565b610620610b37565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6003546001600160a01b03163314610675576040516330cd747160e01b815260040160405180910390fd5b61031b8135610687602084018461222f565b610694604086018661222f565b610b64565b428310156106d85760405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b60448201526064015b60405180910390fd5b60007fa2fd10f4fe9ca2e3b151c55a4c8ac344aa38d70cc05298a0a380ebdba1595dc4853561071261070d602089018961222f565b611132565b61072761072260408a018a61222f565b6112a9565b6003546001600160a01b031660009081526002602052604090208054600181019091556040805160208101969096528501939093526060840191909152608083015260a082015260c0810185905260e001604051602081830303815290604052805190602001209050600061079b826113ef565b90506107dd8185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061141c92505050565b6003546001600160a01b0390811691161461082e5760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016106cf565b61084d8635610840602089018961222f565b61069460408b018b61222f565b505050505050565b81838587845160208601a45050505050565b6003546001600160a01b031633148061087f57503330145b61089c576040516330cd747160e01b815260040160405180910390fd5b6108a68282611446565b5050565b6003546001600160a01b03163314806108c257503330145b6108df576040516330cd747160e01b815260040160405180910390fd5b6040516256c52760e31b81526001600160a01b038216600482015260009030906302b6293890602401602060405180830381865afa158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190612200565b90506108a68282611446565b61031b81604051602401610969919061227f565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611558565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109f157507f000000000000000000000000000000000000000000000000000000000000000046145b15610a1b57507f000000000000000000000000000000000000000000000000000000000000000090565b610546604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610537838383604051602401610adb93929190612292565b60408051601f198184030181529190526020810180516001600160e01b0316630dea9f5360e21b179052611558565b60606105467f00000000000000000000000000000000000000000000000000000000000000006000611561565b60606105467f00000000000000000000000000000000000000000000000000000000000000006001611561565b6000610b7c6001600160401b03604088901c1661160c565b60006001600160401b0387166001600160401b03811115610b9f57610b9f611c0e565b604051908082528060200260200182016040528015610bc8578160200160208202803683370190505b5090505b84821015611128576000868684818110610be857610be8612219565b9050602002810190610bfa91906122bb565b359050366000888886818110610c1257610c12612219565b9050602002810190610c2491906122bb565b610c3290602081019061222f565b915091506003831015610f06576060600060018514610c52576002610c55565b60035b60ff169050610c6481846122f1565b6001600160401b03811115610c7b57610c7b611c0e565b604051908082528060200260200182016040528015610ca4578160200160208202803683370190505b50805190925015610d5857838382818110610cc157610cc1612219565b9050602002013560001c82600081518110610cde57610cde612219565b60209081029190910101526000610cf6826001612304565b90505b83811015610d5657610d28858583818110610d1657610d16612219565b9050602002013560001c888c8c6116a7565b83610d3384846122f1565b81518110610d4357610d43612219565b6020908102919091010152600101610cf9565b505b6000608085856000818110610d6f57610d6f612219565b9050602002013560001c901c905060006fffffffffffffffffffffffffffffffff86866000818110610da357610da3612219565b9050602002013560001c16905087518183610dbe9190612304565b1115610de757604051631f1ce91160e11b8152600481018a9052602481018890526044016106cf565b6000610e1187876001818110610dff57610dff612219565b9050602002013560001c8a8e8e6116a7565b905087610e4257602082026020840260208b01016020600188510302600401603c8801846127105a03fa9350610ed8565b6000198801610eac57610e6187876002818110610dff57610dff612219565b93508451600003610e815760008060008087856127105a03f19350610ed8565b602082026020840260208b01016020600188510302600401603c880187856127105a03f19350610ed8565b6001198801610ed857604051631f1ce91160e11b8152600481018b9052602481018990526044016106cf565b83600003610efc576040516307f3476960e31b8152600481018b90526024016106cf565b5050505050611113565b6003198301610fa257600082826000818110610f2457610f24612219565b6020029190910135915050888111610f41579450610bcc92505050565b6000198103610f555750505050505061112b565b6001600160fc1b038103610f7f57604051639df55d1f60e01b8152600481018790526024016106cf565b60405163237f57bf60e11b815260048101879052602481018290526044016106cf565b6002198301611078576000610fd583836000818110610fc357610fc3612219565b9050602002013560001c868a8a6116a7565b9050801561107257600083836001818110610ff257610ff2612219565b6020029190910135915050898111611010579550610bcc9350505050565b6000198103611025575050505050505061112b565b6001600160fc1b03810361104f57604051639df55d1f60e01b8152600481018890526024016106cf565b60405163237f57bf60e11b815260048101889052602481018290526044016106cf565b50611113565b608083106110d5576110a88282600081811061109657611096612219565b9050602002013560001c8589896116a7565b846110b46080866122f1565b815181106110c4576110c4612219565b602002602001018181525050611113565b600a1983016110f0576110eb846000865161054b565b611113565b604051631f1ce91160e11b815260048101869052602481018490526044016106cf565b8461111d81612317565b955050505050610bcc565b50505b5050505050565b600080826001600160401b0381111561114d5761114d611c0e565b604051908082528060200260200182016040528015611176578160200160208202803683370190505b50905060005b83811015611278577fadc17770459c2efd3eb3b14f0aeee00df3c3ad8e54e78f1f6b5e18429e5101398585838181106111b7576111b7612219565b90506020028101906111c991906122bb565b358686848181106111dc576111dc612219565b90506020028101906111ee91906122bb565b6111fc90602081019061222f565b60405160200161120d929190612330565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091526080016040516020818303038152906040528051906020012082828151811061126557611265612219565b602090810291909101015260010161117c565b508060405160200161128a9190612359565b6040516020818303038152906040528051906020012091505092915050565b600080826001600160401b038111156112c4576112c4611c0e565b6040519080825280602002602001820160405280156112ed578160200160208202803683370190505b50905060005b83811015611278577fab09a839ac3b4881f81abde74569f3a5d716f8531b82d7211ac61b912d3db4f185858381811061132e5761132e612219565b905060200281019061134091906122bb565b3586868481811061135357611353612219565b905060200281019061136591906122bb565b61137390602081019061222f565b604051602001611384929190612330565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001208282815181106113dc576113dc612219565b60209081029190910101526001016112f3565b60006104316113fc610998565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061142c86866119b1565b92509250925061143c82826119fe565b5090949350505050565b6001600160a01b03821661148e576003546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610537573d6000803e3d6000fd5b60035460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af11580156114e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611505919061238f565b600354839130916001600160a01b031690849061084d5760405163cd3f165960e01b81526001600160a01b03948516600482015292841660248401529216604482015260648101919091526084016106cf565b61031b81611ab7565b606060ff831461157b5761157483611ad8565b9050610431565b818054611587906123b1565b80601f01602080910402602001604051908101604052809291908181526020018280546115b3906123b1565b80156116005780601f106115d557610100808354040283529160200191611600565b820191906000526020600020905b8154815290600101906020018083116115e357829003601f168201915b50505050509050610431565b806000036116175750565b6000306001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167b9190612200565b90508082146108a6576040516317cd0afb60e11b815260048101829052602481018390526044016106cf565b6000600160ff1b85166000036116be5750836119a9565b600160fe1b85166000036116f35783600160ff1b8618815181106116e4576116e4612219565b602002602001015190506119a9565b600360fe1b94909418933683838781811061171057611710612219565b905060200281019061172291906122bb565b905080358061175c57611738602083018361222f565b600081811061174957611749612219565b9050602002013560001c925050506119a9565b602f19810161177057503091506119a99050565b603219810161178457503391506119a99050565b60411981016117975742925050506119a9565b60331981016117aa5734925050506119a9565b60006117df6117bc602085018561222f565b60008181106117cd576117cd612219565b9050602002013560001c8888886116a7565b905060301982016117fe576001600160a01b03163192506119a9915050565b6018198201611812571992506119a9915050565b6000611847611824602086018661222f565b600181811061183557611835612219565b9050602002013560001c8989896116a7565b905060001983016118675761185c8183612304565b9450505050506119a9565b600119830161187a5761185c81836123e5565b600219830161188d5761185c81836122f1565b60031983016118a05761185c8183612412565b60051983016118b35761185c8183612426565b600f1983016118d8578082106118ca57600061185c565b6000199450505050506119a9565b60101983016118ef578082116118ca57600061185c565b6011198301611906578082146118ca57600061185c565b601519830161191a571692506119a9915050565b601619830161192e571792506119a9915050565b6017198301611942571892506119a9915050565b601a198301611956571b92506119a9915050565b601b19830161196a571c92506119a9915050565b60405162461bcd60e51b8152602060048201526014602482015273756e6b6e6f776e207175616e746974795479706560601b60448201526064016106cf565b949350505050565b600080600083516041036119eb5760208401516040850151606086015160001a6119dd88828585611b17565b9550955095505050506119f7565b50508151600091506002905b9250925092565b6000826003811115611a1257611a1261243a565b03611a1b575050565b6001826003811115611a2f57611a2f61243a565b03611a4d5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611a6157611a6161243a565b03611a825760405163fce698f760e01b8152600481018290526024016106cf565b6003826003811115611a9657611a9661243a565b036108a6576040516335e2f38360e21b8152600481018290526024016106cf565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60606000611ae583611be6565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611b525750600091506003905082611bdc565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611ba6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bd257506000925060019150829050611bdc565b9250600091508190505b9450945094915050565b600060ff8216601f81111561043157604051632cd44ac360e21b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611c4c57611c4c611c0e565b604052919050565b6000806001600160401b03841115611c6e57611c6e611c0e565b50601f8301601f1916602001611c8381611c24565b915050828152838383011115611c9857600080fd5b828260208301376000602084830101529392505050565b600082601f830112611cc057600080fd5b611ccf83833560208501611c54565b9392505050565b600080600060608486031215611ceb57600080fd5b833592506020840135915060408401356001600160401b03811115611d0f57600080fd5b611d1b86828701611caf565b9150509250925092565b80356001600160a01b038116811461043757600080fd5b600060208284031215611d4e57600080fd5b611ccf82611d25565b60008060408385031215611d6a57600080fd5b8235915060208301356001600160401b03811115611d8757600080fd5b611d9385828601611caf565b9150509250929050565b600060208284031215611daf57600080fd5b81356001600160401b03811115611dc557600080fd5b8201601f81018413611dd657600080fd5b6119a984823560208401611c54565b60008060208385031215611df857600080fd5b82356001600160401b03811115611e0e57600080fd5b8301601f81018513611e1f57600080fd5b80356001600160401b03811115611e3557600080fd5b8560208260051b8401011115611e4a57600080fd5b6020919091019590945092505050565b600080600060608486031215611e6f57600080fd5b83356001600160401b03811115611e8557600080fd5b8401601f81018613611e9657600080fd5b80356001600160401b03811115611eaf57611eaf611c0e565b8060051b611ebf60208201611c24565b91825260208184018101929081019089841115611edb57600080fd5b6020850194505b83851015611f0157843580835260209586019590935090910190611ee2565b9960208901359950604090980135979650505050505050565b60008060008060808587031215611f3057600080fd5b84359350602085013592506040850135915060608501356001600160401b03811115611f5b57600080fd5b611f6787828801611caf565b91505092959194509250565b600060208284031215611f8557600080fd5b81356001600160401b03811115611f9b57600080fd5b6119a984828501611caf565b6000815180845260005b81811015611fcd57602081850181015186830182015201611fb1565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e06020820152600061200c60e0830189611fa7565b828103604084015261201e8189611fa7565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015612074578351835260209384019390920191600101612056565b50909b9a5050505050505050505050565b60006060828403121561209757600080fd5b50919050565b6000602082840312156120af57600080fd5b81356001600160401b038111156120c557600080fd5b6119a984828501612085565b600080600080606085870312156120e757600080fd5b84356001600160401b038111156120fd57600080fd5b61210987828801612085565b9450506020850135925060408501356001600160401b0381111561212c57600080fd5b8501601f8101871361213d57600080fd5b80356001600160401b0381111561215357600080fd5b87602082840101111561216557600080fd5b949793965060200194505050565b600080600080600060a0868803121561218b57600080fd5b8535945060208601359350604086013592506060860135915060808601356001600160401b038111156121bd57600080fd5b6121c988828901611caf565b9150509295509295909350565b600080604083850312156121e957600080fd5b6121f283611d25565b946020939093013593505050565b60006020828403121561221257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261224657600080fd5b8301803591506001600160401b0382111561226057600080fd5b6020019150600581901b360382131561227857600080fd5b9250929050565b602081526000611ccf6020830184611fa7565b8381526060602082015260006122ab6060830185611fa7565b9050826040830152949350505050565b60008235603e198336030181126122d157600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610431576104316122db565b80820180821115610431576104316122db565b600060018201612329576123296122db565b5060010190565b60006001600160fb1b0383111561234657600080fd5b8260051b80858437919091019392505050565b8151600090829060208501835b82811015612384578151845260209384019390910190600101612366565b509195945050505050565b6000602082840312156123a157600080fd5b81518015158114611ccf57600080fd5b600181811c908216806123c557607f821691505b60208210810361209757634e487b7160e01b600052602260045260246000fd5b8082028115828204841417610431576104316122db565b634e487b7160e01b600052601260045260246000fd5b600082612421576124216123fc565b500490565b600082612435576124356123fc565b500690565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205e383ef5ebfb7d1751d8457126a14c23bbb857a4d49f72fec0d790a7bb9bbe8f64736f6c634300081b0033";

type OwnedBrevityInterpreterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnedBrevityInterpreterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnedBrevityInterpreter__factory extends ContractFactory {
  constructor(...args: OwnedBrevityInterpreterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      OwnedBrevityInterpreter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OwnedBrevityInterpreter__factory {
    return super.connect(runner) as OwnedBrevityInterpreter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnedBrevityInterpreterInterface {
    return new Interface(_abi) as OwnedBrevityInterpreterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OwnedBrevityInterpreter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OwnedBrevityInterpreter;
  }
}
