/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OwnedBrevityInterpreter,
  OwnedBrevityInterpreterInterface,
} from "../../contracts/OwnedBrevityInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpDest",
        type: "uint256",
      },
    ],
    name: "BadJump",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "opcode",
        type: "uint256",
      },
    ],
    name: "NotPermitted",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerAlreadySet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pc",
        type: "uint256",
      },
    ],
    name: "Reverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "found",
        type: "uint256",
      },
    ],
    name: "WrongBrevityVersion",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
    ],
    name: "noop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "mem",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "printMem",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
    ],
    name: "run",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "config",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "opcode",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Instruction[]",
            name: "instructions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "quantityType",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "args",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Quantity[]",
            name: "quantities",
            type: "tuple[]",
          },
        ],
        internalType: "struct Program",
        name: "p",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "runMeta",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "withdrawAllMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b5060405161252538038061252583398101604081905261003091610211565b6040805180820182526004815263213932bb60e11b602080830191909152825180840190935260018352603160f81b908301529061006f826000610123565b6101205261007e816001610123565b61014052815160208084019190912060e052815190820120610100524660a05261010b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261011d81610156565b50610410565b600060208351101561013f57610138836101ca565b9050610150565b8161014a84826102e0565b5060ff90505b92915050565b6003546001600160a01b0316156101805760405163cf04b1bb60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90600090a250565b600080829050601f815111156101fe578260405163305a27a960e01b81526004016101f5919061039e565b60405180910390fd5b8051610209826103ec565b179392505050565b60006020828403121561022357600080fd5b81516001600160a01b038116811461023a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061026b57607f821691505b60208210810361028b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102db57806000526020600020601f840160051c810160208510156102b85750805b601f840160051c820191505b818110156102d857600081556001016102c4565b50505b505050565b81516001600160401b038111156102f9576102f9610241565b61030d816103078454610257565b84610291565b6020601f82116001811461034157600083156103295750848201515b600019600385901b1c1916600184901b1784556102d8565b600084815260208120601f198516915b828110156103715787850151825560209485019460019092019101610351565b508482101561038f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b818110156103cc57602081860181015160408684010152016103af565b506000604082850101526040601f19601f83011684010191505092915050565b8051602080830151919081101561028b5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516120bb61046a60003960006109d0015260006109a3015260006108c101526000610899015260006107f40152600061081e0152600061084801526120bb6000f3fe6080604052600436106100e15760003560e01c806384b0196e1161007f578063afa3b97b11610059578063afa3b97b1461023d578063b52acf7914610250578063f3fef3a314610263578063fa09e6301461028357600080fd5b806384b0196e146101cc5780638da5cb5b146101f4578063a46022d21461022c57600080fd5b80633644e515116100bb5780633644e51514610162578063540bcb431461017757806354fd4d50146101975780637ecebe00146101ac57600080fd5b806302b62938146100ed57806313af4035146101205780631c5e048f1461014257600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004611ab7565b6102a3565b6040519081526020015b60405180910390f35b34801561012c57600080fd5b5061014061013b366004611ab7565b61032d565b005b34801561014e57600080fd5b5061014061015d366004611ad9565b6103a1565b34801561016e57600080fd5b5061010d61040e565b34801561018357600080fd5b50610140610192366004611b64565b61041d565b3480156101a357600080fd5b5061010d600181565b3480156101b857600080fd5b5061010d6101c7366004611ab7565b61049e565b3480156101d857600080fd5b506101e16104bc565b6040516101179796959493929190611c85565b34801561020057600080fd5b50600354610214906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b61014061023a366004611d35565b50565b61014061024b366004611d35565b610502565b61014061025e366004611d69565b610551565b34801561026f57600080fd5b5061014061027e366004611e0b565b61070d565b34801561028f57600080fd5b5061014061029e366004611ab7565b610746565b60006001600160a01b0382166102ba575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190611e35565b92915050565b919050565b6003546001600160a01b0316156103575760405163cf04b1bb60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc90600090a250565b6003546001600160a01b031633146103cc576040516330cd747160e01b815260040160405180910390fd5b60005b81811015610409576104018383838181106103ec576103ec611e4e565b905060200201602081019061029e9190611ab7565b6001016103cf565b505050565b60006104186107e7565b905090565b6104476040518060400160405280600981526020016826b2b690223ab6b81d60b91b815250610912565b815b818110156104985761049081604051806040016040528060038152602001620101e960ed1b81525086848151811061048357610483611e4e565b6020026020010151610955565b600101610449565b50505050565b6001600160a01b038116600090815260026020526040812054610322565b6000606080600080600060606104d061099c565b6104d86109c9565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6003546001600160a01b0316331461052d576040516330cd747160e01b815260040160405180910390fd5b61023a813561053f6020840184611e64565b61054c6040860186611e64565b6109f6565b428310156105905760405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b60448201526064015b60405180910390fd5b60007fa2fd10f4fe9ca2e3b151c55a4c8ac344aa38d70cc05298a0a380ebdba1595dc485356105ca6105c56020890189611e64565b610fc4565b6105df6105da60408a018a611e64565b61113b565b6003546001600160a01b031660009081526002602052604090208054600181019091556040805160208101969096528501939093526060840191909152608083015260a082015260c0810185905260e001604051602081830303815290604052805190602001209050600061065382611281565b90506106958185858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112ae92505050565b6003546001600160a01b039081169116146106e65760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610587565b61070586356106f86020890189611e64565b61054c60408b018b611e64565b505050505050565b6003546001600160a01b03163314610738576040516330cd747160e01b815260040160405180910390fd5b61074282826112d8565b5050565b6003546001600160a01b03163314610771576040516330cd747160e01b815260040160405180910390fd5b6040516256c52760e31b81526001600160a01b038216600482015260009030906302b6293890602401602060405180830381865afa1580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db9190611e35565b905061074282826112d8565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561084057507f000000000000000000000000000000000000000000000000000000000000000046145b1561086a57507f000000000000000000000000000000000000000000000000000000000000000090565b610418604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b61023a816040516024016109269190611eb4565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526113ea565b61040983838360405160240161096d93929190611ec7565b60408051601f198184030181529190526020810180516001600160e01b0316630dea9f5360e21b1790526113ea565b60606104187f000000000000000000000000000000000000000000000000000000000000000060006113f3565b60606104187f000000000000000000000000000000000000000000000000000000000000000060016113f3565b6000610a0e6001600160401b03604088901c1661149e565b60006001600160401b0387166001600160401b03811115610a3157610a31611b4e565b604051908082528060200260200182016040528015610a5a578160200160208202803683370190505b5090505b84821015610fba576000868684818110610a7a57610a7a611e4e565b9050602002810190610a8c9190611ef0565b359050366000888886818110610aa457610aa4611e4e565b9050602002810190610ab69190611ef0565b610ac4906020810190611e64565b915091506003831015610d98576060600060018514610ae4576002610ae7565b60035b60ff169050610af68184611f26565b6001600160401b03811115610b0d57610b0d611b4e565b604051908082528060200260200182016040528015610b36578160200160208202803683370190505b50805190925015610bea57838382818110610b5357610b53611e4e565b9050602002013560001c82600081518110610b7057610b70611e4e565b60209081029190910101526000610b88826001611f39565b90505b83811015610be857610bba858583818110610ba857610ba8611e4e565b9050602002013560001c888c8c611539565b83610bc58484611f26565b81518110610bd557610bd5611e4e565b6020908102919091010152600101610b8b565b505b6000608085856000818110610c0157610c01611e4e565b9050602002013560001c901c905060006fffffffffffffffffffffffffffffffff86866000818110610c3557610c35611e4e565b9050602002013560001c16905087518183610c509190611f39565b1115610c7957604051631f1ce91160e11b8152600481018a905260248101889052604401610587565b6000610ca387876001818110610c9157610c91611e4e565b9050602002013560001c8a8e8e611539565b905087610cd457602082026020840260208b01016020600188510302600401603c8801846127105a03fa9350610d6a565b6000198801610d3e57610cf387876002818110610c9157610c91611e4e565b93508451600003610d135760008060008087856127105a03f19350610d6a565b602082026020840260208b01016020600188510302600401603c880187856127105a03f19350610d6a565b6001198801610d6a57604051631f1ce91160e11b8152600481018b905260248101899052604401610587565b83600003610d8e576040516307f3476960e31b8152600481018b9052602401610587565b5050505050610fa5565b6003198301610e3457600082826000818110610db657610db6611e4e565b6020029190910135915050888111610dd3579450610a5e92505050565b6000198103610de757505050505050610fbd565b6001600160fc1b038103610e1157604051639df55d1f60e01b815260048101879052602401610587565b60405163237f57bf60e11b81526004810187905260248101829052604401610587565b6002198301610f0a576000610e6783836000818110610e5557610e55611e4e565b9050602002013560001c868a8a611539565b90508015610f0457600083836001818110610e8457610e84611e4e565b6020029190910135915050898111610ea2579550610a5e9350505050565b6000198103610eb75750505050505050610fbd565b6001600160fc1b038103610ee157604051639df55d1f60e01b815260048101889052602401610587565b60405163237f57bf60e11b81526004810188905260248101829052604401610587565b50610fa5565b60808310610f6757610f3a82826000818110610f2857610f28611e4e565b9050602002013560001c858989611539565b84610f46608086611f26565b81518110610f5657610f56611e4e565b602002602001018181525050610fa5565b600a198301610f8257610f7d846000865161041d565b610fa5565b604051631f1ce91160e11b81526004810186905260248101849052604401610587565b84610faf81611f4c565b955050505050610a5e565b50505b5050505050565b600080826001600160401b03811115610fdf57610fdf611b4e565b604051908082528060200260200182016040528015611008578160200160208202803683370190505b50905060005b8381101561110a577fadc17770459c2efd3eb3b14f0aeee00df3c3ad8e54e78f1f6b5e18429e51013985858381811061104957611049611e4e565b905060200281019061105b9190611ef0565b3586868481811061106e5761106e611e4e565b90506020028101906110809190611ef0565b61108e906020810190611e64565b60405160200161109f929190611f65565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001208282815181106110f7576110f7611e4e565b602090810291909101015260010161100e565b508060405160200161111c9190611f8e565b6040516020818303038152906040528051906020012091505092915050565b600080826001600160401b0381111561115657611156611b4e565b60405190808252806020026020018201604052801561117f578160200160208202803683370190505b50905060005b8381101561110a577fab09a839ac3b4881f81abde74569f3a5d716f8531b82d7211ac61b912d3db4f18585838181106111c0576111c0611e4e565b90506020028101906111d29190611ef0565b358686848181106111e5576111e5611e4e565b90506020028101906111f79190611ef0565b611205906020810190611e64565b604051602001611216929190611f65565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091526080016040516020818303038152906040528051906020012082828151811061126e5761126e611e4e565b6020908102919091010152600101611185565b600061032261128e6107e7565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806112be8686611843565b9250925092506112ce8282611890565b5090949350505050565b6001600160a01b038216611320576003546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610409573d6000803e3d6000fd5b60035460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015611373573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113979190611fc4565b600354839130916001600160a01b03169084906107055760405163cd3f165960e01b81526001600160a01b0394851660048201529284166024840152921660448201526064810191909152608401610587565b61023a81611949565b606060ff831461140d576114068361196a565b9050610322565b81805461141990611fe6565b80601f016020809104026020016040519081016040528092919081815260200182805461144590611fe6565b80156114925780601f1061146757610100808354040283529160200191611492565b820191906000526020600020905b81548152906001019060200180831161147557829003601f168201915b50505050509050610322565b806000036114a95750565b6000306001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150d9190611e35565b9050808214610742576040516317cd0afb60e11b81526004810182905260248101839052604401610587565b6000600160ff1b851660000361155057508361183b565b600160fe1b85166000036115855783600160ff1b86188151811061157657611576611e4e565b6020026020010151905061183b565b600360fe1b9490941893368383878181106115a2576115a2611e4e565b90506020028101906115b49190611ef0565b90508035806115ee576115ca6020830183611e64565b60008181106115db576115db611e4e565b9050602002013560001c9250505061183b565b602f198101611602575030915061183b9050565b6032198101611616575033915061183b9050565b604119810161162957429250505061183b565b603319810161163c57349250505061183b565b600061167161164e6020850185611e64565b600081811061165f5761165f611e4e565b9050602002013560001c888888611539565b90506030198201611690576001600160a01b031631925061183b915050565b60181982016116a45719925061183b915050565b60006116d96116b66020860186611e64565b60018181106116c7576116c7611e4e565b9050602002013560001c898989611539565b905060001983016116f9576116ee8183611f39565b94505050505061183b565b600119830161170c576116ee818361201a565b600219830161171f576116ee8183611f26565b6003198301611732576116ee8183612047565b6005198301611745576116ee818361205b565b600f19830161176a5780821061175c5760006116ee565b60001994505050505061183b565b60101983016117815780821161175c5760006116ee565b60111983016117985780821461175c5760006116ee565b60151983016117ac5716925061183b915050565b60161983016117c05717925061183b915050565b60171983016117d45718925061183b915050565b601a1983016117e8571b925061183b915050565b601b1983016117fc571c925061183b915050565b60405162461bcd60e51b8152602060048201526014602482015273756e6b6e6f776e207175616e746974795479706560601b6044820152606401610587565b949350505050565b6000806000835160410361187d5760208401516040850151606086015160001a61186f888285856119a9565b955095509550505050611889565b50508151600091506002905b9250925092565b60008260038111156118a4576118a461206f565b036118ad575050565b60018260038111156118c1576118c161206f565b036118df5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156118f3576118f361206f565b036119145760405163fce698f760e01b815260048101829052602401610587565b60038260038111156119285761192861206f565b03610742576040516335e2f38360e21b815260048101829052602401610587565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6060600061197783611a78565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156119e45750600091506003905082611a6e565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a38573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a6457506000925060019150829050611a6e565b9250600091508190505b9450945094915050565b600060ff8216601f81111561032257604051632cd44ac360e21b815260040160405180910390fd5b80356001600160a01b038116811461032857600080fd5b600060208284031215611ac957600080fd5b611ad282611aa0565b9392505050565b60008060208385031215611aec57600080fd5b82356001600160401b03811115611b0257600080fd5b8301601f81018513611b1357600080fd5b80356001600160401b03811115611b2957600080fd5b8560208260051b8401011115611b3e57600080fd5b6020919091019590945092505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215611b7957600080fd5b83356001600160401b03811115611b8f57600080fd5b8401601f81018613611ba057600080fd5b80356001600160401b03811115611bb957611bb9611b4e565b8060051b604051601f19603f83011681018181106001600160401b0382111715611be557611be5611b4e565b604052918252602081840181019290810189841115611c0357600080fd5b6020850194505b83851015611c2657843580825260209586019590935001611c0a565b5098602088013598506040909701359695505050505050565b6000815180845260005b81811015611c6557602081850181015186830182015201611c49565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e060208201526000611ca460e0830189611c3f565b8281036040840152611cb68189611c3f565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015611d0c578351835260209384019390920191600101611cee565b50909b9a5050505050505050505050565b600060608284031215611d2f57600080fd5b50919050565b600060208284031215611d4757600080fd5b81356001600160401b03811115611d5d57600080fd5b61183b84828501611d1d565b60008060008060608587031215611d7f57600080fd5b84356001600160401b03811115611d9557600080fd5b611da187828801611d1d565b9450506020850135925060408501356001600160401b03811115611dc457600080fd5b8501601f81018713611dd557600080fd5b80356001600160401b03811115611deb57600080fd5b876020828401011115611dfd57600080fd5b949793965060200194505050565b60008060408385031215611e1e57600080fd5b611e2783611aa0565b946020939093013593505050565b600060208284031215611e4757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611e7b57600080fd5b8301803591506001600160401b03821115611e9557600080fd5b6020019150600581901b3603821315611ead57600080fd5b9250929050565b602081526000611ad26020830184611c3f565b838152606060208201526000611ee06060830185611c3f565b9050826040830152949350505050565b60008235603e19833603018112611f0657600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561032257610322611f10565b8082018082111561032257610322611f10565b600060018201611f5e57611f5e611f10565b5060010190565b60006001600160fb1b03831115611f7b57600080fd5b8260051b80858437919091019392505050565b8151600090829060208501835b82811015611fb9578151845260209384019390910190600101611f9b565b509195945050505050565b600060208284031215611fd657600080fd5b81518015158114611ad257600080fd5b600181811c90821680611ffa57607f821691505b602082108103611d2f57634e487b7160e01b600052602260045260246000fd5b808202811582820484141761032257610322611f10565b634e487b7160e01b600052601260045260246000fd5b60008261205657612056612031565b500490565b60008261206a5761206a612031565b500690565b634e487b7160e01b600052602160045260246000fdfea264697066735822122020963d73961a1c49193318764552a2bc69e4b0e13e8b49a67507d5552a42243264736f6c634300081b0033";

type OwnedBrevityInterpreterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnedBrevityInterpreterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnedBrevityInterpreter__factory extends ContractFactory {
  constructor(...args: OwnedBrevityInterpreterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      OwnedBrevityInterpreter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OwnedBrevityInterpreter__factory {
    return super.connect(runner) as OwnedBrevityInterpreter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnedBrevityInterpreterInterface {
    return new Interface(_abi) as OwnedBrevityInterpreterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OwnedBrevityInterpreter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OwnedBrevityInterpreter;
  }
}
