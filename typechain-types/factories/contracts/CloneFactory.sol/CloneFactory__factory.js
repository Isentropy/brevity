"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloneFactory__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "ERC1167FailedCreateClone",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "cloneAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "NewClone",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "implementation",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "cloneDeterministic",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "implementation",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "config",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "opcode",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32[]",
                                name: "args",
                                type: "bytes32[]",
                            },
                        ],
                        internalType: "struct Instruction[]",
                        name: "instructions",
                        type: "tuple[]",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "quantityType",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32[]",
                                name: "args",
                                type: "bytes32[]",
                            },
                        ],
                        internalType: "struct Quantity[]",
                        name: "quantities",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct Program",
                name: "p",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "sig",
                type: "bytes",
            },
        ],
        name: "cloneIfNeededThenRun",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "implementation",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "predictDeterministicAddress",
        outputs: [
            {
                internalType: "address",
                name: "predicted",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080604052348015600f57600080fd5b506109458061001f6000396000f3fe6080604052600436106100345760003560e01c806393a7e71114610039578063bb45c25014610075578063f14188e014610088575b600080fd5b34801561004557600080fd5b50610059610054366004610391565b6100a8565b6040516001600160a01b03909116815260200160405180910390f35b610059610083366004610610565b6100ea565b34801561009457600080fd5b506100596100a3366004610391565b6101ab565b60008083836040516020016100be929190610741565b6040516020818303038152906040528051906020012090506100e18582306102a5565b95945050505050565b6000808686604051602001610100929190610741565b60405160208183030381529060405280519060200120905060006101258983306102a5565b9050803b61013a576101388989896101ab565b505b60405163b52acf7960e01b81526001600160a01b0382169063b52acf7990349061016c908a908a908a9060040161085d565b6000604051808303818588803b15801561018557600080fd5b505af1158015610199573d6000803e3d6000fd5b50939c9b505050505050505050505050565b60008083836040516020016101c1929190610741565b60405160208183030381529060405280519060200120905060006101e58683610301565b90506001600160a01b03841615610252576040516313af403560e01b81526001600160a01b0385811660048301528216906313af403590602401600060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b505050505b856001600160a01b0316816001600160a01b0316856001600160a01b03167f274b5f356634f32a865af65bdc3d8205939d9413d75e1f367652e4f3b24d0c3a60405160405180910390a495945050505050565b60405160388101919091526f5af43d82803e903d91602b57fd5bf3ff60248201526014810192909252733d602d80600a3d3981f3363d3d373d3d3d363d73825260588201526037600c8201206078820152605560439091012090565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b03811661036f576040516330be1a3d60e21b815260040160405180910390fd5b92915050565b80356001600160a01b038116811461038c57600080fd5b919050565b6000806000606084860312156103a657600080fd5b6103af84610375565b9250602084013591506103c460408501610375565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610406576104066103cd565b60405290565b6040516060810167ffffffffffffffff81118282101715610406576104066103cd565b604051601f8201601f1916810167ffffffffffffffff81118282101715610458576104586103cd565b604052919050565b600067ffffffffffffffff82111561047a5761047a6103cd565b5060051b60200190565b600061049761049284610460565b61042f565b838152905060208101600584901b8301858111156104b457600080fd5b835b8181101561059657803567ffffffffffffffff8111156104d557600080fd5b850160006040828a0312156104e8578081fd5b6104f06103e3565b823581529050602082013567ffffffffffffffff81111561051057600080fd5b80830192505088601f83011261052557600080fd5b813561053361049282610460565b8082825260208201915060208360051b86010192508b83111561055557600080fd5b6020850194505b8285101561057757843582526020948501949091019061055c565b80602085015250505080855250506020830192506020810190506104b6565b5050509392505050565b600082601f8301126105b157600080fd5b813567ffffffffffffffff8111156105cb576105cb6103cd565b6105de601f8201601f191660200161042f565b8181528460208386010111156105f357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c0878903121561062957600080fd5b61063287610375565b95506020870135945061064760408801610375565b9350606087013567ffffffffffffffff81111561066357600080fd5b87016060818a03121561067557600080fd5b61067d61040c565b81358152602082013567ffffffffffffffff81111561069b57600080fd5b8201601f81018b136106ac57600080fd5b6106bb8b823560208401610484565b602083015250604082013567ffffffffffffffff8111156106db57600080fd5b80830192505089601f8301126106f057600080fd5b6106ff8a833560208501610484565b60408201529350506080870135915060a087013567ffffffffffffffff81111561072857600080fd5b61073489828a016105a0565b9150509295509295509295565b91825260601b6bffffffffffffffffffffffff1916602082015260340190565b60006040830182518452602083015160406020860152818151808452606087019150602083019350600092505b808310156107b1578351825260208201915060208401935060018301925061078e565b5095945050505050565b600082825180855260208501945060208160051b8301016020850160005b8381101561080b57601f198584030188526107f5838351610761565b60209889019890935091909101906001016107d9565b50909695505050505050565b6000815180845260005b8181101561083d57602081850181015186830182015201610821565b506000602082860101526020601f19601f83011685010191505092915050565b60608152600060c082018551606084015260208601516060608085015281815180845260e08601915060e08160051b870101935060208301925060005b818110156108cb5760df198786030183526108b6858551610761565b9450602093840193929092019160010161089a565b505050506040860151838203605f190160a08501526108ea82826107bb565b91505084602084015282810360408401526109058185610817565b969550505050505056fea2646970667358221220b82587bf93c327c4567aa8717ecd26a3f8c173567cf4ae2f8a2b6cc1ed2f3c9364736f6c634300081b0033";
const isSuperArgs = (xs) => xs.length > 1;
class CloneFactory__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.CloneFactory__factory = CloneFactory__factory;
CloneFactory__factory.bytecode = _bytecode;
CloneFactory__factory.abi = _abi;
